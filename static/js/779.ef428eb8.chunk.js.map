{"version":3,"file":"static/js/779.ef428eb8.chunk.js","mappings":"yNAEaA,EAAYC,EAAAA,GAAAA,IAAH,4JASTC,EAAUD,EAAAA,GAAAA,QAAH,+H,gFCVPE,E,QAAmBF,EAAAA,IAAH,qJ,SCkB7B,MAhBA,WACE,OACE,SAACE,EAAD,WACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAI5D,C,gMCXYC,GAJUV,EAAAA,EAAAA,IAAH,uEAIQA,EAAAA,EAAAA,GAAH,k1BAsBZW,EAAKX,EAAAA,EAAAA,GAAH,6CAGFY,EAAKZ,EAAAA,EAAAA,GAAH,+NAaFa,EAAIb,EAAAA,EAAAA,EAAH,kGAMDc,EAAYd,EAAAA,EAAAA,EAAH,4I,SCQtB,EAnDgB,WACd,IAAQe,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,sGAEZF,GAAW,GAFC,UAGcG,EAAAA,EAAAA,IAAgBT,GAH9B,gBAGJU,EAHI,EAGJA,QACRN,EAAWM,GACXC,QAAQC,IAAIF,GACZJ,GAAW,GANC,kDAQZK,QAAQC,IAAR,MARY,yBAUZN,GAAW,GAVC,6EAAH,qDAabE,GACD,GAAE,CAACR,KAGF,8BACGK,GACC,SAAC,IAAD,IACEF,GAAWA,EAAQU,OAAS,GAC9B,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAClB,EAAD,UAAc,aACd,SAACC,EAAD,UACGO,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,UAACpB,EAAD,YACE,UAACC,EAAD,WAAG,IAAEiB,KACJC,IAAW,uBAAIA,MAFTC,EADE,YAUnB,SAAC,IAAD,WACE,SAAC,IAAD,WACE,SAAClB,EAAD,UAAW,0BAMtB,C,yLCtDKmB,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8HAGoBN,EAASO,IAH7B,wCAGKC,EAHL,EAGKA,KAHL,kBAIIA,EAAKhB,SAJT,2HASA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BV,GAA/B,kFACCW,EADD,iBACmBX,GADnB,kBAGoBC,EAASO,IAAIG,GAHjC,uBAGKF,EAHL,EAGKA,KAHL,kBAKIA,GALJ,2HAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BZ,GAA3B,kFACCW,EADD,iBACmBX,EADnB,8BAGoBC,EAASO,IAAIG,GAHjC,uBAGKF,EAHL,EAGKA,KAHL,kBAMIA,GANJ,2HAYA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BQ,GAA/B,kFACCW,EADD,iBACmBX,EADnB,8BAGoBC,EAASO,IAAIG,GAHjC,uBAGKF,EAHL,EAGKA,KAHL,kBAKIA,GALJ,2HAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kFACCH,EADD,8BACgCG,GADhC,kBAGoBb,EAASO,IAAIG,GAHjC,uBAGKF,EAHL,EAGKA,KACRf,QAAQC,IAAIc,GAJT,kBAKIA,GALJ,8H","sources":["components/App.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","components/service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1200px;\n  padding-top: 40px;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Section = styled.section`\n  position: relative;\n  background-color: #fff;\n  margin-top: 4.6875rem;\n  /* padding-top: 30px; */\n`;\n","import styled from '@emotion/styled';\nexport const SpinnerContainer = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n`;\n","import { ColorRing } from 'react-loader-spinner';\nimport { SpinnerContainer } from './Loader.styled';\n\nfunction Spinner() {\n  return (\n    <SpinnerContainer>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </SpinnerContainer>\n  );\n}\n\nexport default Spinner;\n","import styled from '@emotion/styled';\n\nexport const Section = styled.div`\n  padding-right: 15px;\n  padding-left: 15px;\n`;\nexport const ReviewsTitle = styled.h3`\n  font-family: Helvetica Neue;\n  font-weight: 500;\n  font-size: 1.25rem;\n  letter-spacing: 0;\n  line-height: 1.2;\n  padding-left: 9px;\n  text-transform: uppercase;\n  margin-top: 10px;\n  margin-bottom: 1em;\n  margin-left: 24px;\n  text-decoration: underline 3px;\n  text-underline-offset: 8px; /* Зсув лінії від тексту на 5 пікселів */\n  text-decoration-color: red; /* Колір підкреслення заголовка */\n  &:before {\n    position: absolute;\n    content: '';\n    height: 1.1em;\n    border-left: 3px solid #fff;\n    margin: -1px 0 0 -9px;\n  }\n`;\nexport const Ul = styled.ul`\n  list-style: none;\n`;\nexport const Li = styled.li`\n  border: 1px solid #546e7c;\n  border-radius: 10px;\n  width: 1100px;\n  padding: 15px;\n  margin-bottom: 10px;\n\n  &:hover,\n  &:focus {\n    background-color: #506e7c;\n    color: #e0e0e0;\n  }\n`;\nexport const P = styled.p`\n  font-weight: 800;\n  text-transform: uppercase;\n  margin-bottom: 5px;\n`;\n\nexport const NoReviews = styled.p`\n  font-size: 30px;\n  font-weight: 800;\n  text-transform: uppercase;\n  margin-top: 200px;\n  margin-left: 400px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'components/service/api';\nimport Spinner from 'components/Loader/Loader';\nimport { Section, Container } from 'components/App.styled';\nimport { ReviewsTitle, Ul, Li, P, NoReviews } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getMovieReviews(movieId);\n        setReviews(results);\n        console.log(results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : reviews && reviews.length > 0 ? (\n        <Section>\n          <Container>\n            <ReviewsTitle>Reviews</ReviewsTitle>\n            <Ul>\n              {reviews.map(({ author, content, id }) => (\n                <Li key={id}>\n                  <P> {author}</P>\n                  {content && <p>{content}</p>}\n                </Li>\n              ))}\n            </Ul>\n          </Container>\n        </Section>\n      ) : (\n        <Section>\n          <Container>\n            <NoReviews>No reviews found</NoReviews>\n          </Container>\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'b88a81f4023f887d7c5099f96529b634',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies() {\n  const query = `movie/popular`;\n  try {\n    const { data } = await instance.get(query);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getCastInfo(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    // console.log(data);\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieByName(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["Container","styled","Section","SpinnerContainer","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","ReviewsTitle","Ul","Li","P","NoReviews","movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","getData","getMovieReviews","results","console","log","length","map","author","content","id","instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","data","getMovieDetails","query","getCastInfo","getMovieByName","queryString"],"sourceRoot":""}