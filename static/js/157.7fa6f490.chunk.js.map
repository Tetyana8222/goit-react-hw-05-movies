{"version":3,"file":"static/js/157.7fa6f490.chunk.js","mappings":"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","sources":["components/App.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/service/api.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1200px;\n  padding-top: 40px;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Section = styled.section`\n  position: relative;\n  background-color: #fff;\n  margin-top: 4.6875rem;\n  /* padding-top: 30px; */\n`;\n","import styled from '@emotion/styled';\nexport const SpinnerContainer = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) scale(1);\n  /* position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh; */\n`;\n","import { ColorRing } from 'react-loader-spinner';\nimport { createPortal } from 'react-dom';\n\nimport { SpinnerContainer } from './Loader.styled';\n\nconst loaderRoot = document.querySelector('#loader-root');\nconst Spinner = () => {\n  return createPortal(\n    <SpinnerContainer>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </SpinnerContainer>,\n    loaderRoot\n  );\n};\n\nexport default Spinner;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'b88a81f4023f887d7c5099f96529b634',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies() {\n  const query = `movie/popular`;\n  try {\n    const { data } = await instance.get(query);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getCastInfo(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    // console.log(data);\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieByName(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledBackNavLink = styled(NavLink)`\n  text-decoration: none;\n  text-transform: uppercase;\n  border-radius: 5px;\n  padding: 8px 12px;\n  margin-left: 28px;\n  color: #fff;\n  background-color: #546e7c;\n  opacity: 0.7;\n`;\nexport const MovieCardInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding-right: 30px;\n  padding-left: 30px;\n  padding-top: 30px;\n`;\nexport const Img = styled.img`\n  width: 200px;\n  height: auto;\n  object-fit: cover;\n  display: block;\n  margin-right: 20px;\n`;\n\nexport const MovieTitle = styled.h1`\n  font-size: 20px;\n  font-weight: 800;\n  margin-bottom: 10px;\n`;\nexport const Score = styled.p`\n  color: darkgrey;\n`;\nexport const Title = styled.h3`\n  font-size: 18px;\n  font-weight: 800;\n  margin-top: 10px;\n  margin-bottom: 5px;\n`;\n\nexport const AddInfo = styled.div`\n  margin-top: 22px;\n`;\n\nexport const CartNav = styled.nav`\n  display: flex;\n`;\nexport const StyledNavLink = styled(NavLink)`\n  margin-right: 20px;\n  text-transform: uppercase;\n`;\n\nexport const Button = styled.button`\n  font-size: 12px;\n  text-transform: uppercase;\n  width: 70px;\n  margin-top: 10px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border: none;\n  border-bottom: solid 3px tomato;\n  background-color: #fff;\n`;\n","import { useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  StyledBackNavLink,\n  MovieCardInfo,\n  Img,\n  MovieTitle,\n  Score,\n  Title,\n  AddInfo,\n  CartNav,\n  StyledNavLink,\n  Button,\n} from './MovieCard.styled';\nimport { Container, Section } from 'components/App.styled';\nimport noImage from '../../images/noImage.png';\n\nexport const MovieCard = ({ movieInfo }) => {\n  const location = useLocation();\n  const locationComeFrom = useRef(location.state?.from ?? '/');\n  console.log(locationComeFrom);\n  const getReleaseYear = releaseDate => {\n    const date = new Date(releaseDate);\n    return date.getFullYear();\n  };\n  const getGenres = arrGenres => {\n    return arrGenres.map(genre => genre.name).join(', ');\n  };\n  return (\n    <Section>\n      <Container>\n        <StyledBackNavLink to={locationComeFrom.current}>\n          Go Back\n        </StyledBackNavLink>\n        <MovieCardInfo>\n          {movieInfo.poster_path ? (\n            <Img\n              alt={movieInfo.title}\n              src={`https://image.tmdb.org/t/p/w500/${movieInfo.poster_path}`}\n              width={`100`}\n            />\n          ) : (\n            <Img src={noImage} alt=\" poster is not available\" />\n          )}\n\n          <div>\n            <MovieTitle>\n              {movieInfo.title}\n              <p>({getReleaseYear(movieInfo.release_date)})</p>\n            </MovieTitle>\n            <Score> User Score: {~~(movieInfo.vote_average * 10)}%</Score>\n            <Title>Overview</Title>\n            <p>{movieInfo.overview}</p>\n            <div>\n              {' '}\n              <Title>Genres</Title>\n              <p>{getGenres(movieInfo.genres)}</p>\n            </div>\n\n            <AddInfo>\n              <Title>Additional Information</Title>\n              <CartNav>\n                <StyledNavLink to=\"cast\">\n                  <Button>Cast</Button>\n                </StyledNavLink>\n\n                <StyledNavLink to=\"reviews\">\n                  <Button>Reviews</Button>\n                </StyledNavLink>\n              </CartNav>\n            </AddInfo>\n          </div>\n        </MovieCardInfo>\n      </Container>\n    </Section>\n  );\n};\n\nexport default MovieCard;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { useParams } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\n\nimport Spinner from 'components/Loader/Loader';\nimport { getMovieDetails } from 'components/service/api';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Container } from 'components/App.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getMovieInfo = async () => {\n      try {\n        setLoading(true);\n        const movieInfo = await getMovieDetails(movieId);\n        setMovieInfo(movieInfo);\n        setLoading(false);\n      } catch (error) {\n        toast.error('Sorry, something went wrong.');\n      }\n    };\n    getMovieInfo();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Spinner />}\n      <section>\n        <Container>\n          {movieInfo && <MovieCard movieInfo={movieInfo} />}\n          <Outlet />\n        </Container>\n      </section>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Container","styled","Section","SpinnerContainer","loaderRoot","document","querySelector","createPortal","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","data","results","getMovieDetails","id","query","getCastInfo","getMovieReviews","getMovieByName","queryString","console","log","StyledBackNavLink","NavLink","MovieCardInfo","Img","MovieTitle","Score","Title","AddInfo","CartNav","StyledNavLink","Button","MovieCard","movieInfo","location","useLocation","locationComeFrom","useRef","state","from","arrGenres","releaseDate","to","current","poster_path","alt","title","src","noImage","release_date","Date","getFullYear","vote_average","overview","genres","map","genre","name","join","movieId","useParams","useState","setMovieInfo","loading","setLoading","useEffect","getMovieInfo","toast"],"sourceRoot":""}