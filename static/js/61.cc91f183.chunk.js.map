{"version":3,"file":"static/js/61.cc91f183.chunk.js","mappings":"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","sources":["components/App.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.jsx","components/MoviesList/MoviesList.styled.js","components/service/api.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1200px;\n  padding-top: 40px;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Section = styled.section`\n  position: relative;\n  background-color: #fff;\n  margin-top: 4.6875rem;\n  /* padding-top: 30px; */\n`;\n","import styled from '@emotion/styled';\nexport const SpinnerContainer = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%) scale(1);\n  /* position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh; */\n`;\n","import { ColorRing } from 'react-loader-spinner';\nimport { createPortal } from 'react-dom';\n\nimport { SpinnerContainer } from './Loader.styled';\n\nconst loaderRoot = document.querySelector('#loader-root');\nconst Spinner = () => {\n  return createPortal(\n    <SpinnerContainer>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </SpinnerContainer>,\n    loaderRoot\n  );\n};\n\nexport default Spinner;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Movies,\n  Ul,\n  Li,\n  StyledLink,\n  Thumb,\n  Img,\n  Title,\n} from './MoviesList.styled';\nimport noImage from '../../images/noImage.png';\n\nexport const MoviesList = ({ trendingMovies }) => {\n  const location = useLocation();\n  // console.log(location);\n\n  return (\n    <>\n      <Movies>\n        <Ul>\n          {trendingMovies.map(movie => {\n            return (\n              <Li key={movie.id}>\n                <StyledLink\n                  to={`/movies/${movie.id}`}\n                  state={{ from: location }}\n                >\n                  <Thumb>\n                    {movie.poster_path ? (\n                      <Img\n                        src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                        width={`200`}\n                        alt=\"preview\"\n                      />\n                    ) : (\n                      <Img src={noImage} alt=\"No Image Available\" />\n                    )}\n                  </Thumb>\n                  {movie.title && <Title>{movie.title}</Title>}\n                  {movie.name && <Title>{movie.name}</Title>}\n                </StyledLink>\n              </Li>\n            );\n          })}\n        </Ul>\n      </Movies>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  border-radius: 5px;\n`;\n\nexport const Movies = styled.div`\n  padding-top: 30px;\n`;\nexport const MoviesListTitle = styled.h1`\n  text-align: center;\n  text-transform: uppercase;\n  color: #000;\n  padding-top: 30px;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  padding-right: 15px;\n  padding-left: 15px;\n`;\n\nexport const Li = styled.li`\n  text-align: center;\n  width: 220px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  border-radius: 5px;\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n  overflow: hidden;\n  /* border-radius: 5px; */\n  width: 220px;\n  height: 330px;\n`;\nexport const Img = styled.img`\n  display: block;\n  height: 100%;\n  width: 100%;\n`;\nexport const Title = styled.p`\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  /* position: absolute; */\n  width: 100%;\n  left: 0;\n  bottom: 0;\n  height: 60px;\n  margin: 0;\n  background-color: rgba(47, 48, 58, 0.4);\n`;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'b88a81f4023f887d7c5099f96529b634',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies() {\n  const query = `movie/popular`;\n  try {\n    const { data } = await instance.get(query);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getCastInfo(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    // console.log(data);\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieByName(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  font: inherit;\n\n  padding-top: 30px;\n  width: 100%;\n  padding: 10px;\n  border-radius: 10px;\n  max-width: 520px;\n  width: 100%;\n  margin: 16px auto;\n  display: flex;\n  justify-content: center;\n  background: #546e7c;\n  opacity: 0.7;\n  border: none;\n`;\n\nexport const SearchField = styled.input`\n  font: inherit;\n  max-width: 350px;\n  width: 100%;\n  border-radius: 10px;\n  margin: 16px auto;\n  padding: 12px;\n  display: block;\n`;\n\nexport const SearchButton = styled.button`\n  width: 70px;\n  height: 45px;\n  margin: auto;\n  font: inherit;\n  border-radius: 5px;\n  padding: 0;\n`;\n","import 'react-toastify/dist/ReactToastify.css';\nimport { FiSearch } from 'react-icons/fi';\nimport { useState } from 'react';\nimport { Form, SearchButton, SearchField } from './SearchForm.styled';\n\nexport function SearchForm({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (query.trim() === '') {\n      setQuery('');\n      return;\n    }\n    onSubmit(query.trim());\n    setQuery('');\n  };\n  // const handleSubmit = event => {\n  //   event.preventDefault();\n  //   if (query.trim() === '') {\n  //     setQuery('');\n  //     toast.error('Search field is empty');\n  //     return;\n  //   }\n  //   onSubmit(query);\n  // };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <SearchButton type=\"submit\">\n        <FiSearch style={{ marginRight: 8 }} />\n      </SearchButton>\n      <SearchField\n        type=\"text\"\n        name=\"searchQuery\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie\"\n        value={query}\n        onChange={handleQueryChange}\n      />\n    </Form>\n  );\n}\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByName } from 'components/service/api';\nimport { Container, Section } from 'components/App.styled';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport Spinner from 'components/Loader/Loader';\nimport { MoviesListTitle } from 'components/MoviesList/MoviesList.styled';\nimport movies_popcorn from '../images/movies_popcorn.gif';\n\nconst Movies = () => {\n  const [moviesArray, setMoviesArray] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(`query`);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getMovieByName(query);\n        setMoviesArray(results);\n        console.log(results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (query) {\n      getData();\n    }\n  }, [query]);\n\n  const handleSubmit = query => {\n    // event.preventDefault();\n    setSearchParams({ query: query });\n  };\n\n  return (\n    <>\n      {loading && <Spinner />}\n      <Container>\n        <Section>\n          <MoviesListTitle>Search movies:</MoviesListTitle>\n          <SearchForm onSubmit={handleSubmit} />\n\n          {moviesArray.length === 0 && (\n            <img src={movies_popcorn} alt=\"searching\" />\n          )}\n\n          {moviesArray.length !== 0 && (\n            <MoviesList trendingMovies={moviesArray} />\n          )}\n        </Section>\n      </Container>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Container","styled","Section","SpinnerContainer","loaderRoot","document","querySelector","createPortal","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","MoviesList","trendingMovies","location","useLocation","Ul","map","movie","Li","to","id","state","from","poster_path","src","alt","noImage","title","name","Movies","MoviesListTitle","StyledLink","Link","Thumb","Img","Title","instance","axios","baseURL","params","api_key","language","getTrendingMovies","get","data","results","getMovieDetails","query","getCastInfo","getMovieReviews","getMovieByName","queryString","console","log","Form","SearchField","SearchButton","SearchForm","onSubmit","useState","setQuery","event","preventDefault","trim","type","style","marginRight","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","moviesArray","setMoviesArray","loading","setLoading","useSearchParams","searchParams","setSearchParams","useEffect","getData","length","movies_popcorn"],"sourceRoot":""}